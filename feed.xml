<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://yolken.net/feed.xml" rel="self" type="application/atom+xml" /><link href="https://yolken.net/" rel="alternate" type="text/html" /><updated>2020-09-20T22:13:05-07:00</updated><id>https://yolken.net/feed.xml</id><title type="html">Benjamin Yolken</title><subtitle>Random thoughts from the perspective of a software engineer, particularly around tech careers and development processes.</subtitle><entry><title type="html">Service meshes are hard</title><link href="https://yolken.net/blog/service-meshes" rel="alternate" type="text/html" title="Service meshes are hard" /><published>2020-09-20T13:44:00-07:00</published><updated>2020-09-20T13:44:00-07:00</updated><id>https://yolken.net/blog/service-meshes</id><content type="html" xml:base="https://yolken.net/blog/service-meshes">&lt;p&gt;I’ve worked on deploying “service meshes” at multiple companies. Although
they look great on paper, deploying them is a huge pain, with a high
risk of serious production outages. In this post, I want to share some of my war
stories and caution against diving into the service mesh hype too quickly.&lt;/p&gt;

&lt;h2 id=&quot;aside-whats-a-service-mesh&quot;&gt;Aside: What’s a service mesh?&lt;/h2&gt;

&lt;p&gt;A common pattern in software engineering is to support a product or feature
via multiple, semi-independent components. This blog, for instance, is hosted
in Github Pages. When your browser requests the HTML for this page, your
request most likely hits some sort of frontend proxy (e.g.,
&lt;a href=&quot;https://www.nginx.com/&quot;&gt;Nginx&lt;/a&gt;), which then sends the request to a backend
server (implemented in Ruby, perhaps), which then sends out requests to even more
services, e.g. to record stats or fetch user information.&lt;/p&gt;

&lt;h4 id=&quot;direct-communication&quot;&gt;Direct communication&lt;/h4&gt;

&lt;p&gt;The simplest approach for handling requests between these components is to
have them communicate directly. Here’s an illustration:&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/assets/service_meshes1.png&quot; alt=&quot;service mesh simple&quot; width=&quot;400&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Each arrow represents a request from a client to a server. These requests are typically implemented
with &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP&lt;/a&gt;, but might use a
specialized, binary protocol instead, e.g. when using something like
&lt;a href=&quot;http://thrift.apache.org/&quot;&gt;Apache Thrift&lt;/a&gt;. The underlying bytes can be encrypted
but are often not since this would require the clients and servers to
handle protocols like &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;TLS&lt;/a&gt;,
which adds complexity and reduces performance.&lt;/p&gt;

&lt;p&gt;The picture above doesn’t show how service A “discovers” the addresses of B and C.
These might be hard-coded, looked up in &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;DNS&lt;/a&gt;,
or fetched from a centralized service registry like &lt;a href=&quot;https://www.consul.io/&quot;&gt;Consul&lt;/a&gt;.
The important thing to note, though, is that the details of doing this are
handled by A itself.&lt;/p&gt;

&lt;h4 id=&quot;using-a-service-mesh&quot;&gt;Using a service mesh&lt;/h4&gt;

&lt;p&gt;A service mesh is a dedicated infrastructure layer for handling the details
of this inter-service communication. Although the exact architecture varies,
with a mesh the picture above might become:&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/assets/service_meshes2.png&quot; alt=&quot;service mesh simple&quot; width=&quot;500&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Now, service A doesn’t communicate directly with B and C. Instead, it sends requests
to a local (outbound) proxy that then sends the requests to the (inbound) proxies
for B and C. The latter then forward the requests to the service instances on
their respective hosts. The links between proxies can be, and often are, encrypted
via &lt;a href=&quot;https://developers.cloudflare.com/access/service-auth/mtls/&quot;&gt;mTLS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The control plane is needed so that the proxy configurations can stay up-to-date.
If host 2 disappears, for instance, and is replaced with host 2a, then all
of the proxies on the hosts talking to B need to be updated with the new
address.&lt;/p&gt;

&lt;h3 id=&quot;benefits&quot;&gt;Benefits&lt;/h3&gt;

&lt;p&gt;The nice thing about the mesh architecture is that your services no longer need to
handle the low-level details of communicating with others. This makes a lot of things
substantially easier, at least in theory:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Service discovery:&lt;/strong&gt; Service A doesn’t need to discover the addresses of B and C,
  it can just let the control plane and proxy do that.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Encryption:&lt;/strong&gt; Encryption is now easier because all hosts are running proxies
  that are designed to handle this, and we don’t need to mess with the details of TLS in the
  services themselves.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Complex routing:&lt;/strong&gt; If we want to test a new variation of service B, for instance, we can
  configure the mesh to send 1% of traffic to the new instance and the rest to the older ones.
  If we discover a problem, we can reroute the traffic without redeploying the client code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cross-fleet networking observability:&lt;/strong&gt; Since all communication goes through the same
  layer, the mesh can expose a standardized set of metrics and logs for all inter-service links.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These benefits are particularly big when you’re in an environment with a diverse set
of client and server implementations. Service A might be Ruby, B golang, and C Java. Sure,
you could add mTLS, standardized metrics, etc. directly into each service, but you’re going
to have to re-implement the same logic multiple times in multiple languages. Even if the services
are written in the same language, they are probably not going to be using the
same client and server implementations uniformly.&lt;/p&gt;

&lt;h3 id=&quot;implementations&quot;&gt;Implementations&lt;/h3&gt;

&lt;p&gt;Reviewing existing service mesh implementations is beyond the scope of this post. Instead,
I’ll refer you to &lt;a href=&quot;https://servicemesh.es/&quot;&gt;this site&lt;/a&gt;, which has a nice summary and seems
up-to-date. As an alternative to adopting an off-the-shelf implementation, some companies
simply take a “roll your own” approach using &lt;a href=&quot;https://www.envoyproxy.io/&quot;&gt;Envoy&lt;/a&gt; plus a
custom-built control plane service; this is what we did at Stripe.&lt;/p&gt;

&lt;h2 id=&quot;why-theyre-hard&quot;&gt;Why they’re hard&lt;/h2&gt;

&lt;p&gt;From the discussion above, it seems like service meshes are great. They make your
infrastructure more secure, uniform, controllable, and observable. Everyone should be
using them!!&lt;/p&gt;

&lt;p&gt;Unfortunately, though, service meshes make life harder in a number of different ways.&lt;/p&gt;

&lt;h4 id=&quot;scope-is-n2&quot;&gt;Scope is N&lt;sup&gt;2&lt;/sup&gt;&lt;/h4&gt;

&lt;p&gt;Let’s say you have N services and you want to update all of them in some way, for
instance to replace a library with a newer version. Typically, this will involve
O(N) updates and O(N) things that can go wrong. When rolling out a service mesh,
however, you’re making O(N&lt;sup&gt;2&lt;/sup&gt;) updates because you’re changing (and potentially breaking)
how each pair of services communicates.&lt;/p&gt;

&lt;p&gt;This means that, even with a small number of services, there are a lot of things
that can go wrong (and will). Service A might be fine talking to B, and B might be fine
talking to C, but the A to C link might occasionally time out for some weird reason
that takes days to debug. If you’re in a company with dozens of services, the N&lt;sup&gt;2&lt;/sup&gt; effects
can be huge- be prepared for a lot of work rolling things out and debugging.&lt;/p&gt;

&lt;h4 id=&quot;more-hops-more-problems&quot;&gt;More hops, more problems&lt;/h4&gt;

&lt;p&gt;In the non-service-mesh world, communication issues are typically the fault of either
the client or server. If service A is getting HTTP 5XX responses from service B, you can
look at the code and logs for B to understand why that might be happening.&lt;/p&gt;

&lt;p&gt;In the service mesh world, on the other hand, these responses might be coming from B, the
proxy on B’s host, or the proxy on A’s host. Now, instead of looking in one place,
you have to look in three places. This means that the debugging process is slower and
more tedious.&lt;/p&gt;

&lt;h4 id=&quot;encrypted-traffic-looks-like-binary-junk&quot;&gt;Encrypted traffic looks like binary junk&lt;/h4&gt;

&lt;p&gt;There are lots of great tools for inspecting unencrypted traffic. Personally,
I like running &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump -i any -A port [my service port]&lt;/code&gt; and watching requests
go back and forth when I’m trying to understand the traffic hitting a service. If
this traffic is encrypted, you can still do this, but all you’ll see is binary junk:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;16:51:07.773675 IP lga15s43-in-f36.1e100.net.https &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 192.168.0.10.56081: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;P.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;2713:3385, ack 537, win 261, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nop,nop,TS val 2846442026 ecr 1037268748], length 672
..J..C..k.H...E....&lt;span class=&quot;nv&quot;&gt;$.&lt;/span&gt;.y..O...&lt;span class=&quot;nv&quot;&gt;$.&lt;/span&gt;..
......F...&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;...........
..B&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;.w.......7V.o.&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;...wc.qk....2.ePyi&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;XsTP..R..z.&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;S..
&lt;span class=&quot;s2&quot;&gt;&quot;iT....S...Ju.%..........%.....kZV0...EA9.W.NB.^.....f&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
hV...i&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8?...&amp;gt;8.&lt;span class=&quot;s2&quot;&gt;&quot;.-..m.H.........y...	.......?.G.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$U&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;j...s.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;....;.....a......6@
[w.&amp;gt;SHQ.%...F....S..e	..f,..T(CA..U....x...../...8..(.j.....k..h.{.^...5n.4f.[....].x.....}
2.....Q..*.^..?.l...e&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;~.]...j......P.....]....R..ZB....7..B9}e&quot;&lt;/span&gt;.....f.&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
AAV&lt;span class=&quot;nv&quot;&gt;$m&lt;/span&gt;....z..m..........x..B.P.&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0....k..E..S........&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;......{.W..&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Most service meshes only use encryption on the proxy to proxy links and not
on the proxy to service ones. But, these proxy to proxy links are often where a lot of
problems happen, and not being able to easily inspect the details of each request on the
wire makes debugging harder.&lt;/p&gt;

&lt;h4 id=&quot;certificate-management-is-hard&quot;&gt;Certificate management is hard&lt;/h4&gt;

&lt;p&gt;In order to implement mTLS rigorously, you need to generate fine-grained certificates for
all of the nodes in your mesh. Certificate management for individual hosts is hard enough,
but it gets even messier when hosts are shared by multiple services and each one needs
a distinct identity.&lt;/p&gt;

&lt;p&gt;I spent many, many months at Stripe working on a “Service CA” to address this problem. We got
things working in the end, but it required a lot of very careful design and relatively high-risk
changes to components in the existing certificate provisioning flow.&lt;/p&gt;

&lt;h4 id=&quot;control-plane-is-a-single-point-of-failure&quot;&gt;Control plane is a single point of failure&lt;/h4&gt;

&lt;p&gt;The control plane is a critical component of a service mesh. It keeps all of the proxies updated
with the latest service endpoints, routing rules, listener configs, etc. These updates
may be happening frequently due to instances coming up and down, new services being added, and
other changes happening in the environment. Depending on the sources of this information and the
protocol used between the control plane and proxies, keeping all of the data fresh and accurate can
be challenging.&lt;/p&gt;

&lt;p&gt;In addition, the control plane can wreak havoc on your infrastructure if it’s misconfigured
or gets confused about the state of the world.&lt;/p&gt;

&lt;p&gt;A really scary type of incident, which I’ve seen a few times across multiple companies, is when
the control plane thinks that all of the service instances have disappeared (for instance, because
the source that it pulls these from is broken). It blissfully pushes out empty configs to all
of the proxies, all inter-service communication stops, and your company is hard-down
until the issue is fixed.&lt;/p&gt;

&lt;h4 id=&quot;proxies-are-complex&quot;&gt;Proxies are complex&lt;/h4&gt;

&lt;p&gt;Many service meshes use &lt;a href=&quot;https://www.envoyproxy.io/&quot;&gt;Envoy&lt;/a&gt; as the underlying proxy.
While powerful, Envoy is a beast; it has
&lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/latest/configuration/configuration&quot;&gt;hundreds of knobs&lt;/a&gt; that
can be tuned to affect its behavior.&lt;/p&gt;

&lt;p&gt;The code is written in C++, which is not the easiest language to make changes in, and is
prone to segfaults, leaks, and other types of memory issues if you’re not super careful. At
Stripe, we occasionally observed crashes, which required a lot of work to understand and fix.&lt;/p&gt;

&lt;p&gt;These issues aren’t unique to Envoy. Proxies in general are just prone to being complex,
particularly when you’re trying to optimize performance and satisfy the many different use cases
that people have for them.&lt;/p&gt;

&lt;h2 id=&quot;alternatives-to-service-meshes&quot;&gt;Alternatives to service meshes&lt;/h2&gt;

&lt;p&gt;In some cases, you may be able to get the benefits of a service mesh with much less work.&lt;/p&gt;

&lt;h4 id=&quot;for-security&quot;&gt;For security&lt;/h4&gt;

&lt;p&gt;To prevent an unauthorized client from hitting a server, you can use firewall rules
(called &lt;a href=&quot;https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html&quot;&gt;security groups&lt;/a&gt;
in the AWS context) to lock down access. AWS and other cloud providers make it fairly
straightforward to define these rules at the instance level and keep them updated.&lt;/p&gt;

&lt;p&gt;If you’re in Kubernetes, you can also define service-level firewall rules via
&lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/network-policies/&quot;&gt;network policies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If there is a particularly sensitive origin / destination pair, you can implement mTLS for just
that pair in the client and server code or via a proxy on each side. Doing this as a one-off
is going to be easier than implementing it for all service combinations in your infrastructure.&lt;/p&gt;

&lt;h4 id=&quot;for-load-balancing-and-routing&quot;&gt;For load balancing and routing&lt;/h4&gt;

&lt;p&gt;If you’re running in a cloud environment, consider using hosted load balancers in front
of your services (e.g.,
&lt;a href=&quot;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html&quot;&gt;ALBs&lt;/a&gt; in AWS).
These typically support target discovery, health checking, complex routing, standardized metrics,
and other things that a service mesh also provides.&lt;/p&gt;

&lt;p&gt;If you’re in Kubernetes, you can use
&lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/service/&quot;&gt;services&lt;/a&gt; and other
primitives to get the same kinds of features.&lt;/p&gt;

&lt;h2 id=&quot;the-path-forward&quot;&gt;The path forward&lt;/h2&gt;

&lt;p&gt;If you’ve carefully evaluated the pros and cons and still decided to go forward with a service
mesh, here are some tips to make the process a bit easier.&lt;/p&gt;

&lt;h4 id=&quot;plan-carefully&quot;&gt;Plan carefully&lt;/h4&gt;

&lt;p&gt;Rolling out a service mesh is a really big project. It will require changes to nearly
every service running in your infrastructure, and it can’t be released all at once.&lt;/p&gt;

&lt;p&gt;Think carefully about the phases of the rollout. At Stripe, we started on the client side
without encryption, then implemented the server side without encryption, then,
finally, after that was stable, activated mTLS on a service-by-service basis. We were
also very careful about the order in which services were updated within each phase. The optimal
plan in your environment may be different depending on your risk profile and service topology.&lt;/p&gt;

&lt;h4 id=&quot;pad-your-estimates&quot;&gt;Pad your estimates&lt;/h4&gt;

&lt;p&gt;Take your time estimates for the amount of engineer time required and multiply by 4. Seriously.
Making updates and debugging networking issues in services you don’t fully understand is really
time consuming. Moreover, you’ll discover weird use cases and requirements that you didn’t plan
for and will need to incorporate into your design.&lt;/p&gt;

&lt;p&gt;At Stripe, we originally thought that one person could roll out our service mesh in 3 quarters.
In the end, it took over a year with 4 people on the team contributing. Because we hadn’t
planned for that much work, we had to defer other projects that we had promised to do
(e.g., rolling out Kubernetes more extensively), which caused some resentment among our users.&lt;/p&gt;

&lt;h4 id=&quot;make-it-easy-to-switch-back-and-forth&quot;&gt;Make it easy to switch back and forth&lt;/h4&gt;

&lt;p&gt;Whenever a change is made (e.g., switching a service pair to the service mesh), keep the
old path around for a while and make it easy to revert back. At Stripe, we had a dynamic,
“feature flag” system we could use for this; other companies I’ve been at have had similar
configuration mechanisms.&lt;/p&gt;

&lt;p&gt;If there’s an urgent problem in the middle of the night, it’s a lot easier to revert by clicking a
button in a UI than it is to revert the change in the code, wait for CI, and do a deploy.&lt;/p&gt;

&lt;h4 id=&quot;dont-roll-your-own&quot;&gt;Don’t roll your own&lt;/h4&gt;

&lt;p&gt;Please, please use an existing service mesh implementation if at all possible as opposed
to rolling your own. Even if you can’t use an existing implementation directly, consider
ripping out and reusing the pieces that can be adapted to your environment.&lt;/p&gt;

&lt;p&gt;At Stripe, we built our control plane components completely from scratch. While it was a lot
of fun personally, it took a long time to develop and there were a number of very tricky corner
cases that popped up and led to serious production incidents along the way. It’s much safer
to adopt service mesh components that have been written by domain experts and been
extensively battle-tested outside your company.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Service meshes have a lot of benefits, but also a number of downsides that should be
carefully considered before committing to a rollout. Thankfully, things should get better
in the future as cloud providers include more service mesh features directly into their
products and third-party solutions like
&lt;a href=&quot;https://istio.io/latest/docs/concepts/what-is-istio/&quot;&gt;Istio&lt;/a&gt; become more robust. In the meantime,
though, be careful!&lt;/p&gt;</content><author><name></name></author><summary type="html">Service meshes look great on paper but can be a huge pain to roll out and manage. In this post, I want to share some of my war stories and caution against diving into the service mesh hype too quickly.</summary></entry><entry><title type="html">Cleaner go code with golines</title><link href="https://yolken.net/blog/cleaner-go-code-golines" rel="alternate" type="text/html" title="Cleaner go code with golines" /><published>2020-07-23T12:37:00-07:00</published><updated>2020-07-23T12:37:00-07:00</updated><id>https://yolken.net/blog/cleaner-go-code-golines</id><content type="html" xml:base="https://yolken.net/blog/cleaner-go-code-golines">&lt;p&gt;Last year, with the generous support of &lt;a href=&quot;https://segment.com&quot;&gt;my employer&lt;/a&gt;, I open-sourced
&lt;a href=&quot;https://github.com/segmentio/golines&quot;&gt;golines&lt;/a&gt;, a tool that automatically shortens
long lines in go code. At the time, I was busy with other work so I never got a chance to
write about it beyond the basic documentation in the
&lt;a href=&quot;https://github.com/segmentio/golines/blob/master/README.md&quot;&gt;project README&lt;/a&gt;. In this post,
I want to explain more about why I developed the tool and how it works.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The problem&lt;/h2&gt;

&lt;p&gt;The standard tooling for the go programming language includes
&lt;a href=&quot;https://golang.org/cmd/gofmt/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gofmt&lt;/code&gt;&lt;/a&gt;, a very solid code formatting utility. &lt;code class=&quot;highlighter-rouge&quot;&gt;gofmt&lt;/code&gt;
automatically applies the standard go rules for indents and spacing, for example converting this
mess:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myFunc&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		 &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Combined: %s %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;


	 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;into a logically equivalent but much prettier variant:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Combined: %s %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unfortunately, this tool and the others that extend it
(e.g., &lt;a href=&quot;https://godoc.org/golang.org/x/tools/cmd/goimports&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;goimports&lt;/code&gt;&lt;/a&gt;) don’t do anything about
long lines. &lt;code class=&quot;highlighter-rouge&quot;&gt;gofmt&lt;/code&gt; will happily leave the following code as-is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myFunc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg5&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg6&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg4&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg5&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg6&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Personally, I find it much more readable in cases like this to split out the
function arguments and map key-value pairs onto separate lines:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myFunc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg5&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg6&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg4&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg5&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longArg6&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longArg6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I like go, but for years it bothered me that there was no automatic way of applying the
above types of cleanups. When going into a new codebase, I would manually shorten the worst
offenders, which was fine for small projects but got tedious in large ones that had
accumulated years of long-line commits. I decided to make this process easier by writing my own
tool!&lt;/p&gt;

&lt;h3 id=&quot;aside-who-cares&quot;&gt;Aside: Who cares?&lt;/h3&gt;

&lt;p&gt;Although many support this crusade to shorten long lines, I’ve definitely gotten some
skepticism over the years about both my manual fixes and attempts to write an automated tool.
The main arguments (and my responses) have included the following:&lt;/p&gt;

&lt;h4 id=&quot;you-can-just-wrap-lines-in-whatever-code-editor-youre-using&quot;&gt;&lt;em&gt;You can just wrap lines in whatever code editor you’re using!&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Yes, that’s true, but not everyone uses the same editor and not all editors handle wrapping
gracefully. In addition, many online reviewing tools don’t wrap lines, so this doesn’t help
when I’m trying to understand your 200 character-wide function declarations in Github.&lt;/p&gt;

&lt;h4 id=&quot;line-length-is-a-matter-of-preference-we-shouldnt-impose-a-constraint-that-others-may-disagree-with&quot;&gt;&lt;em&gt;Line length is a matter of preference. We shouldn’t impose a constraint that others may disagree with.&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;True, but so is spaces vs. tabs, whether to put the opening &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt; on the same line as a function
definition or the next one, and many other style disputes that &lt;code class=&quot;highlighter-rouge&quot;&gt;gofmt&lt;/code&gt; and other tools take
very definitive stands on. You have to impose some standards, otherwise each file in your repo
will look completely different based on who last edited it.&lt;/p&gt;

&lt;h4 id=&quot;i-find-having-all-function-arguments-all-map-key-value-pairs-etc-on-a-single-line-easier-to-read&quot;&gt;&lt;em&gt;I find having all function arguments, all map key-value pairs, etc. on a single line easier to read.&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Really? Well, maybe this could be valid in some cases. However, it’s generally easier to scan
vertical lists than horizontal ones. This is why we use bullet points so much
in presentation slides. Although a horizontal list might be ok in some cases, a vertical
orientation should never make it significantly worse and in many cases be an improvement.&lt;/p&gt;

&lt;h2 id=&quot;first-attempt-regular-expressions&quot;&gt;First attempt: Regular expressions&lt;/h2&gt;

&lt;p&gt;My first attempt at automating the line shortening process was to write a script that used
regular expressions. The basic algorithm was:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go through each line in the file&lt;/li&gt;
  &lt;li&gt;If the line is already shorter than the threshold (e.g., 100 columns), leave it as-is and
  continue to the next one&lt;/li&gt;
  &lt;li&gt;Otherwise, loop through a set of pre-defined, “splitter” regular expressions&lt;/li&gt;
  &lt;li&gt;If the line matches one of these, insert newlines according to some associated, pre-defined
  logic, then continue to the next line&lt;/li&gt;
  &lt;li&gt;After reaching the end of the file, run &lt;code class=&quot;highlighter-rouge&quot;&gt;gofmt&lt;/code&gt; to fix the spacing issues created by (4)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I then went about creating the regular expressions to use. It started off relatively easy;
for instance, to pick up the case of a long line with a function call, I used something like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;^\s*\w+\((\w+)(,[ ]?\w+)*\)$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That will match &lt;code&gt;&amp;nbsp;&amp;nbsp;hello(arg1, arg2,arg3)&lt;/code&gt;. We can then have some logic that
inserts newlines and a final comma in the appropriate places:
&lt;code&gt;&amp;nbsp;&amp;nbsp;hello(\narg1,\n arg2,\narg3,\n)&lt;/code&gt;. The end result, before running the final
&lt;code class=&quot;highlighter-rouge&quot;&gt;gofmt&lt;/code&gt;, thus renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gofmt&lt;/code&gt; then fixes the indents on each line so that it actually looks nice and matches the
surrounding code.&lt;/p&gt;

&lt;p&gt;I then made similar regular expressions and fixing logic for a few other common cases, including
long function declarations and simple key-value maps.&lt;/p&gt;

&lt;p&gt;The initial version worked decently well, fixing around 70% of the long lines in an old go repo
at my then employer. Next, I went through and improved the regular expressions to fill in some
of the gaps. In the example above, for instance, what if an argument has quotes around it? What
if someone has already done a single split in the middle, but one or both of the segments is still
too long? There are many, many cases to cover. After a while, the regular expressions got so big
that I had to split them up into smaller clauses and use text templating to put them together.&lt;/p&gt;

&lt;p&gt;Even with multiple iterations, it was difficult to match more than 80% or so of the long lines. The
hardest cases to cover involved nesting. In the above example, for instance, each function
argument could itself be a function call, and those arguments could include function calls,
and so forth. I would try something that seemed promising, only to hit a case that would
cause the regular expression matcher to get stuck in a
&lt;a href=&quot;https://www.regular-expressions.info/catastrophic.html&quot;&gt;catastrophic backtracking&lt;/a&gt; loop.&lt;/p&gt;

&lt;p&gt;In the end, I just gave up. I’m not a regular expression expert, so maybe there could have been
some way to rewrite my expressions to make them more efficient, but even if I did that, it seemed
like fixing all of the corner cases would be a never-ending game of whack-a-mole.&lt;/p&gt;

&lt;h2 id=&quot;second-attempt-use-asts&quot;&gt;Second attempt: Use ASTs&lt;/h2&gt;

&lt;h3 id=&quot;the-theory&quot;&gt;The theory&lt;/h3&gt;

&lt;p&gt;Ultimately, the grammar of the go language is just too complex to be “interpreted” by simple
regular expressions. The go compiler takes a different approach- it uses a parser to create
an &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;abstract syntax tree (AST)&lt;/a&gt; representation
of the code. I never took a class on compilers, so I’ll leave the theoretical details to the
experts. The main idea, however, is to convert code from a linear sequence of bytes into a tree
that can be used for “understanding” what the code actually represents. The latter representation
can then be transformed into lower-level machine code.&lt;/p&gt;

&lt;p&gt;The go compiler, for instance, converts this code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;key1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s-%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;into the following AST:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/golines_graph1.png&quot; alt=&quot;golines AST&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It looks scary at first glance, but if you walk through from the top and follow along in the code,
it makes intuitive sense. The great thing about ASTs is that they automatically handle the
nesting and splitting that was so hard when using regular expressions. Go also exposes the AST
generation process and structs in &lt;a href=&quot;https://golang.org/pkg/go/ast/&quot;&gt;the standard library&lt;/a&gt;, so it’s
fairly easy to create representations like the one above.&lt;/p&gt;

&lt;p&gt;Now, in theory, we can modify the regular-expression-based shortening algorithm above to work on an
AST instead of a sequence of lines. Instead of looping through lines, we can do a depth-first
traversal of the nodes. If a node is on a long line, we can insert newlines between its children
and/or recursively apply our shortening on them. The exact logic here depends on the node
type, but in the case of a &lt;code class=&quot;highlighter-rouge&quot;&gt;CallExpression&lt;/code&gt; (i.e., a function call) for instance, we would
insert newlines between each of the children &lt;code class=&quot;highlighter-rouge&quot;&gt;Args&lt;/code&gt;. Then, at the end, we can convert the AST
back to code and run &lt;code class=&quot;highlighter-rouge&quot;&gt;gofmt&lt;/code&gt; to fix the spacing on each line.&lt;/p&gt;

&lt;h3 id=&quot;the-implementation&quot;&gt;The implementation&lt;/h3&gt;

&lt;p&gt;This is all great, but there’s one significant problem- ASTs are &lt;em&gt;abstract&lt;/em&gt;. In general, they’re
intended for compilation, not code formatting, so details like spacing and newlines might
be incomplete. In the go case specifically, it’s hard to tell what the length of a line is just
by looking at the AST nodes that were generated from that line.&lt;/p&gt;

&lt;p&gt;As I dug into the AST-based approach, I realized that this was going to be a significant blocker-
if we didn’t know line lengths, it would be impossible to figure out which AST nodes to modify.
I needed some way to link the state of the original code (i.e., that a particular line is too
long) to its AST representation, but without modifying the logic of the code itself.&lt;/p&gt;

&lt;p&gt;After some trial-and-error, I figured out that &lt;em&gt;comments&lt;/em&gt; could be one way to make this link.
In particular, the tool could first add comments to the long lines in the code, then generate the
AST. We could then check each node to see whether it had one of these “line too long” comments
to determine whether we should try to split it out onto multiple lines.&lt;/p&gt;

&lt;p&gt;The golang AST does include comments, but unfortunately they’re not directly linked to other nodes
in the AST. Thankfully, however, there’s a third-party AST generator,
&lt;a href=&quot;https://github.com/dave/dst&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dave/dst&lt;/code&gt;&lt;/a&gt;, that does maintain these links. By using this, I could
mark the long lines, generate the AST, and then traverse the graph and insert newlines in the
appropriate places to break up the long lines. The “control comments” could then be scrubbed
at the end so they wouldn’t appear in the final formatted output.&lt;/p&gt;

&lt;p&gt;Once I got the initial skeleton in place, the rest of the work involved figuring out how
to split each node type. In most cases, it was fairly straightforward- function declarations
and calls, for instance, can be split between the arguments. It got tricker, however,
when dealing with cases where the top-level node is not the one that you actually want
to shorten. If you’re shortening an assignment, for instance &lt;code class=&quot;highlighter-rouge&quot;&gt;x := myFunc(...)&lt;/code&gt;, then you
really want to shorten the right-hand-side, which is in a lower-level node. In these cases,
you need to “push” the shortening work down recursively.&lt;/p&gt;

&lt;h2 id=&quot;from-testing-to-release&quot;&gt;From testing to release&lt;/h2&gt;

&lt;p&gt;After lots of trial-and-error, I got the tool, which I decided to call &lt;code class=&quot;highlighter-rouge&quot;&gt;golines&lt;/code&gt;, working for all
of the fixtures that I could generate myself. The next step was to run it on real code to make
sure that it (1) wouldn’t crash, (2) would make progress at a reasonable speed, and (3) would
actually shorten long lines in a reasonable way.&lt;/p&gt;

&lt;p&gt;I started with some of the smaller go repos inside Segment, and worked my way up to large,
open-source projects like Kubernetes. Along the way, I filled in the various AST node types
that were omitted in my first pass and also used &lt;a href=&quot;https://golang.org/pkg/net/http/pprof/&quot;&gt;pprof&lt;/a&gt; to
discover and alleviate the performance bottlenecks.&lt;/p&gt;

&lt;p&gt;In the end, I got to a point where I felt fairly confident about the quality of the tool and
kicked off our internal process for open-sourcing. A week later, &lt;code class=&quot;highlighter-rouge&quot;&gt;golines&lt;/code&gt; was out in the wild and
available for general use!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you’re annoyed by long go lines as much as I am, please give
&lt;a href=&quot;https://github.com/segmentio/golines&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;golines&lt;/code&gt;&lt;/a&gt; a try. And, if you notice any problems or
have enhancement suggestions, file an issue in the repo. External contributions are welcome as well.&lt;/p&gt;</content><author><name></name></author><summary type="html">Last year, I open-sourced golines, a tool that automatically shortens long lines in go code. This post explains why I developed the tool and how it works.</summary></entry><entry><title type="html">Stop hiding levels</title><link href="https://yolken.net/blog/stop-hiding-levels" rel="alternate" type="text/html" title="Stop hiding levels" /><published>2020-03-29T13:27:00-07:00</published><updated>2020-03-29T13:27:00-07:00</updated><id>https://yolken.net/blog/stop-hiding-levels</id><content type="html" xml:base="https://yolken.net/blog/stop-hiding-levels">&lt;p&gt;Most tech companies, even those without formal job titles,
assign “levels” to engineers. These levels are used to set initial
pay when an offer is made and then, after joining, for evaluating
performance and determining subsequent pay adjustments and promotions.&lt;/p&gt;

&lt;p&gt;Despite the importance of levels for determining compensation
and job expectations, many companies prevent non-management employees
from seeing anyone’s levels besides their own. In this post,
I want to explain why this is a harmful practice that should be
discontinued.&lt;/p&gt;

&lt;h2 id=&quot;aside-intro-to-eng-levels&quot;&gt;Aside: Intro to eng levels&lt;/h2&gt;

&lt;h3 id=&quot;what-they-are&quot;&gt;What they are&lt;/h3&gt;

&lt;p&gt;Although different companies use different labels and titles for their levels,
most of them assign engineers to the following buckets:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Bucket&lt;/th&gt;
      &lt;th&gt;Typical IC Titles&lt;/th&gt;
      &lt;th&gt;Typical Manager Titles&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;SWE 1, new grad&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;SWE 2&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Senior engineer&lt;/td&gt;
      &lt;td&gt;Engineering manager&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Staff engineer&lt;/td&gt;
      &lt;td&gt;Engineering manager, senior engineering manager&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5+&lt;/td&gt;
      &lt;td&gt;Senior staff, principal, etc.&lt;/td&gt;
      &lt;td&gt;Senior manager, director, VP, etc.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The first two buckets/levels are typically IC (individual contributor) only. Starting at the
third level, people can choose to stay in the IC track or switch over to management. The
ranks thin out considerably above the fourth level, so I’ve compressed these
in the table above.&lt;/p&gt;

&lt;p&gt;As mentioned previously, the labels for the levels vary considerably between
companies. Google, for instance, starts its leveling scheme at “3” instead of “1”, and as
a result a bunch of other companies who love copying Google (or copying companies that
have already copied Google, like Facebook) do the same thing. The boundaries between
the levels can also vary a bit, particularly in the higher ones; some companies make it
relatively straightforward to get to the fourth and fifth levels, for instance, whereas
others require many, many years of continuous high performance to be promoted above the
“senior” one.&lt;/p&gt;

&lt;p&gt;If you’re curious about the levels at a specific company, &lt;a href=&quot;https://levels.fyi&quot;&gt;levels.fyi&lt;/a&gt;
seems fairly accurate and also attempts to show apples-to-apples comparisons between
different companies.&lt;/p&gt;

&lt;h3 id=&quot;what-they-mean&quot;&gt;What they mean&lt;/h3&gt;

&lt;p&gt;Levels play a huge role in compensation. When a company extends a job offer, it’s calculated
from the level they have determined for you based on your interview performance and
prior work experience. When you negotiate with them on the offer details, they’re just
moving the numbers around within the pre-determined (and usually secret) pay and equity bands
for your level.&lt;/p&gt;

&lt;p&gt;Once you’re on the job, your level determines the expectations for your role and, as
a consequence, how your performance is evaluated. This, in turn, determines the magnitudes
of any pay increases or bonuses you earn as well as your eligibility for promotion.&lt;/p&gt;

&lt;p&gt;Surprisingly, levels don’t play a big role in day-to-day work, at least for IC engineers.
People at higher levels are expected to work on bigger, more technically complex
projects, but nothing stops a new-grad from working on a challenging, multi-month project or
a principal engineer from fixing small bugs and responding to alerts in the middle
of the night.&lt;/p&gt;

&lt;h2 id=&quot;why-levels-are-kept-secret&quot;&gt;Why levels are kept secret&lt;/h2&gt;

&lt;p&gt;Companies that make levels secret usually justify this by a desire to prevent
higher-level people from “pulling rank”. The idea is that if levels
are open and an L2 and an L5 (using the numbers from the table above) are having a
heated technical discussion, the L2 might be intimidated and feel that they can’t
challenge the L5’s judgement. In the alternative world where levels are secret,
the thinking goes, the two sides will treat each others as equals and be forced
to resolve disputes objectively, based solely on the merits of each alternative.&lt;/p&gt;

&lt;p&gt;The reality, however, is that people can, and do, still pull rank when levels are
secret. The L5 can’t say “listen to me because I’m a senior staff engineer”, but
they can say “listen to me because I’ve been at this company longer than you have”.
With levels taken away, people revert, either implicitly or explicitly, to seniority, age,
project responsibilities, and other things that loosely correlate with level. These
criteria, however, are no more “fair” and objective than what they’re replacing, and, in
some situations, are strictly worse.&lt;/p&gt;

&lt;p&gt;Another argument for secret levels is that it prevents “resentment”, particularly
when people feel that a peer’s level is not justified given their job performance.
If the company’s leveling and promotion policies are unfair, however,
people will figure this out eventually, whether or not the levels are open. Instead of
attempting to hide the problem, companies that are afraid of blowback from their
levels should address these issues head-on, by fixing the underlying process and/or
giving more detailed justifications for their decisions.&lt;/p&gt;

&lt;p&gt;Finally, a more cynical reason for keeping levels secret is that it gives ICs
less negotiating power in discussions with management. If I’m an L3 and I know
that I’m performing better than higher-level people on the team, I can argue for
a promotion and a raise. If I don’t know this, I’m less likely to complain,
and, even if I do, my arguments will be easier to dismiss. This “information
asymmetry” gives the company an edge that can help it save money.&lt;/p&gt;

&lt;h2 id=&quot;the-downside-of-secret-levels&quot;&gt;The downside of secret levels&lt;/h2&gt;

&lt;p&gt;The worst aspect of secret levels is that they make career progression harder
for IC engineers, particularly as they become more senior. Explaining why this
is true requires a bit more background on how performance evaluation works
behind-the-scenes.&lt;/p&gt;

&lt;p&gt;Engineer performance at most companies is evaluated through a combination of peer,
self, and manager reviews at each cycle (typically every 6 months). To make sure that
evaluations are fair and to assign the official ratings, there’s usually a “calibration”
process done by managers, followed, at some companies, by a “promotions committee” that
decides who gets leveled up.&lt;/p&gt;

&lt;p&gt;The evaluations at these meetings are nominally done based on a set of
non-secret, objective criteria for each level, e.g. “an L3 engineer should be
a technical expert in at least one area” or “an L5 engineer should lead a major,
1-2 year effort”. In practice, however, the easiest way to evaluate someone’s
performance is to compare them to their peers– e.g., “Alice is an L3 and she’s
operating at the same level as the L4s on the team, therefore she should be promoted”–
and this is, in fact, how these judgments are often made.&lt;/p&gt;

&lt;p&gt;The problem is that if you don’t know the levels of your peers, it’s hard for you
to understand where you stand and what you should be aiming for to get to the next
level. It also makes it hard to write accurate peer reviews (a feature of most
tech companies’ processes) because you don’t know exactly what the expectations
are for the person you’re reviewing. Ultimately, because peer reviews can’t address
specific leveling criteria and comparisons to other team members at the same level, each
person’s evaluation is based more on managers’ personal judgments. This makes the
outcomes more arbitrary and less fair.&lt;/p&gt;

&lt;p&gt;Companies with secret levels realize that this is a problem and typically
address it by publishing a set of “personas” alongside their official leveling
criteria. At one of my former employers, they were structured like this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sally is a senior engineer on the search infrastructure team. Last quarter,
she led a project to migrate the search backend from a giraffe-based architecture
to a cheetah-based one, which involved close collaboration with the search
frontend and product teams. She also did 30 interviews and represented the company
by giving a presentation at State University’s job fair.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That’s great if you’re on the search infrastructure team and are working
on a project just like the one described, but otherwise this story is both
fake and worthless. It doesn’t help me to accurately evaluate myself or
my peers and keeps the true evaluation criteria in a secret, black box.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Hiding levels isn’t a great policy for software engineers. The supposed benefits to
employees and company culture aren’t really benefits at all, and the downsides for IC career
advancement can be significant.&lt;/p&gt;</content><author><name></name></author><summary type="html">Most tech companies, even those without formal job titles, assign &quot;levels&quot; to engineers. Despite the importance of levels for determining compensation and job expectations, many companies prevent non-management employees from seeing anyone's levels besides their own. In this post, I explain why this is a harmful practice that should be discontinued.</summary></entry><entry><title type="html">Leaving a job</title><link href="https://yolken.net/blog/leaving-a-job" rel="alternate" type="text/html" title="Leaving a job" /><published>2019-10-06T12:52:00-07:00</published><updated>2019-10-06T12:52:00-07:00</updated><id>https://yolken.net/blog/leaving-a-job</id><content type="html" xml:base="https://yolken.net/blog/leaving-a-job">&lt;p&gt;Over the course of my career, I’ve had many jobs which implies that I’ve also left many jobs.
Leaving a job can be awkward and emotionally draining, but, depending on the circumstances,
also liberating and life-improving.&lt;/p&gt;

&lt;p&gt;In this post, I want to provide some guidance on why, how, and when to leave a job based on my
experiences so far.&lt;/p&gt;

&lt;h2 id=&quot;why-consider-leaving&quot;&gt;Why consider leaving?&lt;/h2&gt;

&lt;p&gt;There are many reasons for leaving a software engineering job, some of them better than others. I’ve
found that the main motivations for voluntary attrition can be roughly divided into three buckets,
described in more details below.&lt;/p&gt;

&lt;h3 id=&quot;the-company&quot;&gt;The company&lt;/h3&gt;

&lt;p&gt;The strongest reason for leaving a job is that you’ve simply lost faith in the company. It could
be that the company isn’t doing well financially, has weak leadership, is engaged in behavior
that you consider horribly unethical, or has had some kind of downward cultural shift since you
joined.&lt;/p&gt;

&lt;p&gt;Company issues could also be more benign. The company might be too big and bureaucratic, its
products or technology might not be as interesting as they once were, or it might not have a
geographic presence in a region you want to move to.&lt;/p&gt;

&lt;p&gt;Company-level concerns are really hard to get around because, unless you’re in upper management,
they’re outside the control of you, your peers, and your direct manager. Also, switching
to a different part of the company won’t really address them.&lt;/p&gt;

&lt;h3 id=&quot;the-team&quot;&gt;The team&lt;/h3&gt;

&lt;p&gt;Another reason for leaving is that there’s something wrong with your team. It might be an
ineffective manager, coworkers that you don’t get along with, boring projects, or poor work/life
balance.&lt;/p&gt;

&lt;p&gt;These can be just as demoralizing as company-level issues (and sometimes even worse), but
unlike the latter they’re typically addressable by switching teams. In some cases, it might not be
possible to switch teams or other teams might be just as bad, in which case leaving is a reasonable
choice.&lt;/p&gt;

&lt;h3 id=&quot;the-role&quot;&gt;The role&lt;/h3&gt;

&lt;p&gt;You may like your company and team, but be really unhappy about something specific to your
situation or role. The most common issue here is pay, but other things that fall into this bucket
include issues with leveling/promotions, lack of recognition, or a realization that you don’t
enjoy certain aspects of your day-to-day work.&lt;/p&gt;

&lt;p&gt;These issues are theoretically resolvable, but often require some uncomfortable discussions
and negotiations within your management chain, without any guarantees of success. Switching
teams can also help sometimes, although if your issues are around money or career advancement,
moving laterally could “reset” your accomplishments and put you on the same footing
as a new hire.&lt;/p&gt;

&lt;h2 id=&quot;alternatives-to-leaving&quot;&gt;Alternatives to leaving&lt;/h2&gt;

&lt;p&gt;Leaving a job is a big step, and the process of finding a new one can be extremely stressful and
time consuming. Before resigning or even starting the process of going back on the market, you
should carefully consider any alternatives that would help your situation but allow you to stay
at the same place.&lt;/p&gt;

&lt;h3 id=&quot;switch-teams&quot;&gt;Switch teams&lt;/h3&gt;

&lt;p&gt;The easiest alternative to leaving is to just switch teams. Most tech companies allow
engineers to do this, and with minimal red tape, provided that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Your performance is satisfactory&lt;/li&gt;
  &lt;li&gt;You’ve been with your current team for “long enough”; the precise definition of “long enough”
 varies from company to company, but it’s typically 9-12 months.&lt;/li&gt;
  &lt;li&gt;You can find another team that has available headcount and is willing to take you&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The great thing about switching teams is that it’s much easier and lower-risk than switching
companies, but, at the same time, could give your career just as much of a “jolt” as quitting
and starting someplace new would. When I transferred from Cluster Management to
Public Data at Google, for instance, the new team had completely different customers, leadership,
operating procedures, and technology. It took months to get fully up-to-speed (almost as much as a
role at a new company would), and kept me interested in staying at Google for several more years.&lt;/p&gt;

&lt;h3 id=&quot;switch-ladders&quot;&gt;Switch ladders&lt;/h3&gt;

&lt;p&gt;A more extreme version of switching teams is to stay at the same company but switch career ladders.
The most common moves I’ve seen here are between IC and management or from engineering to
product management.&lt;/p&gt;

&lt;p&gt;This is a bit higher-risk than switching teams, but if you really want a change and feel confident
that a new type of role will make you happier, it might be worth a shot. Note that, depending
on your employer’s policies, you may have to do interviews or jump through other bureaucratic hoops before making this kind of switch.&lt;/p&gt;

&lt;h3 id=&quot;negotiate-improvements&quot;&gt;Negotiate improvements&lt;/h3&gt;

&lt;p&gt;If you’re dealing with issues that are readily adjustable (e.g., your paycheck) and within the
control of your direct manager, then it might be possible to negotiate improvements. There are
many, many articles and books out there about how to negotiate effectively, so I won’t discuss
that here.&lt;/p&gt;

&lt;p&gt;I will note, though, that in my personal experience, I’ve had less than great luck trying to
negotiate my way out of unhappy job situations. The main reasons have been:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Most companies are extremely rigid around their HR policies; it’s often easier for them
 to spend $100k+ hiring and training someone new than give a small out-of-band pay increase,
 provide better office furniture, allow remote work, or do other things that
 are orders of magnitude cheaper but go against some existing policy.&lt;/li&gt;
  &lt;li&gt;Just being good at your job is not enough of a negotiating position. To have the best leverage,
 particularly around financial demands, you need to get multiple offers from similarly-sized
 companies. This requires a lot of time and effort, and by the time you’ve done this it’s often
 easier to just quit.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It’s still worth a try, and you may be more successful.&lt;/p&gt;

&lt;h3 id=&quot;take-a-leave-of-absence&quot;&gt;Take a leave of absence&lt;/h3&gt;

&lt;p&gt;I’ve never done this personally, but several colleagues over the years have. Taking a break
isn’t a guarantee that you’ll feel better about your job when you get back, but it can at least
give you more time to think about your situation and explore alternatives without the grind
of your day-to-day work. Note that extended leaves taken for voluntary reasons require advance
permission from your employer, and, even if the leave is completely unpaid, there’s no guarantee
of approval.&lt;/p&gt;

&lt;h2 id=&quot;giving-notice&quot;&gt;Giving notice&lt;/h2&gt;

&lt;p&gt;Once you’ve decided to leave, you need to figure out when and how to tell your employer;
typically this notice is given to your manager, who will then forward it on to their
manager and HR.&lt;/p&gt;

&lt;h3 id=&quot;when&quot;&gt;When&lt;/h3&gt;

&lt;p&gt;In the US, most software engineers work “at will” which means that you’re not required to give any
notice before resigning. Quitting suddenly, though, will probably piss off your colleagues and burn
bridges, so the standard courtesy is to give at least two week’s notice even if you’re not
contractually obligated to do this.&lt;/p&gt;

&lt;p&gt;I typically err on the side of giving even more notice, sometimes as far as six weeks in advance.
The main reason for this is that I’m usually interviewing for new jobs while finishing up
at my old one, and I don’t want to have to lie to my manager about why I need to take
random vacation days in the middle of the week. Also, giving more notice gives the company
more time to address any grievances you have and (maybe) convince you to stay.&lt;/p&gt;

&lt;p&gt;Some people say that it’s risky to give more notice than necessary- technically, you could
be “walked out” early to prevent you from picking up information or skills that might be
useful to a competitor. In practice, though, I’ve &lt;em&gt;never&lt;/em&gt; seen this happen at any of my employers-
in the end, it’s just easier and less disruptive to let people who want to quit do so
voluntarily and on their own schedules.&lt;/p&gt;

&lt;h3 id=&quot;how&quot;&gt;How&lt;/h3&gt;

&lt;p&gt;Once you’ve decided to leave, you should tell your manager in a 1:1,
in-person chat. You should be honest about your reasons, but at the same time polite. They
may try to convince you to change your mind or chat with other people at the company who
might be able to do this. It’s fine to hear people out, but keep in mind that these discussions
can be awkward and also a waste of time if you’ve definitively made up your mind.&lt;/p&gt;

&lt;p&gt;Once the difficult part is out of the way, it’s time to talk about the logistics of (1)
your final date, (2) telling the rest of the team, and (3) transitioning your work to other
people. I think it’s best to let your manager dictate the terms on these things (within reason);
leaving can cause a lot of disruption, so you don’t want to do anything that will
inflame the situation.&lt;/p&gt;

&lt;h2 id=&quot;saying-goodbye&quot;&gt;Saying goodbye&lt;/h2&gt;

&lt;p&gt;In the final weeks, it’s important to leave your projects in good shape, have a
positive attitude, and generally avoid doing anything that will burn bridges. It’s fine
to be honest with coworkers who ask you directly why you’re leaving, but it’s not necessary
or beneficial to send long, emotional goodbye messages out to large groups of colleagues.&lt;/p&gt;

&lt;p&gt;No matter how unhappy you are, be nice to your soon-to-be-ex-colleagues and get through to the
end by thinking about how much better your next job will be.&lt;/p&gt;

&lt;h2 id=&quot;final-advice&quot;&gt;Final advice&lt;/h2&gt;

&lt;p&gt;Don’t do anything rash, but ultimately trust your gut. If you’ve exhausted the alternatives and
have an offer from another company that would make you happier, then take it.&lt;/p&gt;</content><author><name></name></author><summary type="html">Over the course of my career, I've had many jobs which implies that I've also left many jobs. Leaving a job can be awkward and emotionally draining, but, depending on the circumstances, also liberating and life-improving. In this post, I want to provide some guidance on why, how, and when to leave a job based on my experiences so far.</summary></entry><entry><title type="html">Switching from product management to engineering</title><link href="https://yolken.net/blog/switching-from-product-to-eng" rel="alternate" type="text/html" title="Switching from product management to engineering" /><published>2019-09-07T16:23:00-07:00</published><updated>2019-09-07T16:23:00-07:00</updated><id>https://yolken.net/blog/switching-from-product-to-eng</id><content type="html" xml:base="https://yolken.net/blog/switching-from-product-to-eng">&lt;p&gt;I began my career as a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Product_manager#Product_management_in_software_development&quot;&gt;product manager (PM)&lt;/a&gt;,
but then switched tracks and became a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Software_engineer&quot;&gt;software engineer (SWE)&lt;/a&gt;
three and a half years later. While many people start in engineering and then later go into product
management, the direction that I took is pretty rare and something that people often ask me about
when looking at my background.&lt;/p&gt;

&lt;p&gt;In this post, I want to describe how I started as a PM, why I made the decision to switch, and
how it worked out.&lt;/p&gt;

&lt;h2 id=&quot;at-the-start&quot;&gt;At the start&lt;/h2&gt;

&lt;p&gt;I come from a fairly non-traditional, academic background- I did Electrical Engineering
(with some CS) in undergrad, and then spent four and a half years getting a PhD in
&lt;a href=&quot;https://en.wikipedia.org/wiki/Operations_research&quot;&gt;Operations Research&lt;/a&gt;. The details of
why I chose to get a PhD and why I chose this field in particular are too long to cover here,
so I’ll leave them for a future post.&lt;/p&gt;

&lt;p&gt;Towards the end of my PhD program, I got a summer internship at Google through a friend
from school who had graduated and now worked there. Although the internship was technically in
software engineering, the project and day-to-day work were very research oriented- I was trying to
figure out ways to more efficiently allocate compute resources at Google, which was closely related
to my PhD research.&lt;/p&gt;

&lt;p&gt;I enjoyed the summer a lot, and towards the end of my internship I had the opportunity to apply for
full-time positions at Google. In addition to going through the SWE conversion process, my mentor
suggested that I also consider product management. The reasoning he gave is that PMs have
higher-level control of projects and also have a lot more flexibility in their day-to-day work.&lt;/p&gt;

&lt;p&gt;As an entry-level SWE, I’d be expected to implement small bits of functionality in Google’s resource
allocation systems. As a PM, on the other hand, I’d be able to help architect those systems (which
is obviously a much higher-leverage activity), and, moreover, be able to write code, publish papers,
and do other fun activities on the side.&lt;/p&gt;

&lt;p&gt;His advice made a lot of sense to me, and, after many rounds of interviews, I got and signed
a full-time PM offer. Six months later, and one week after defending my dissertation, I joined
the product team at Google.&lt;/p&gt;

&lt;h2 id=&quot;being-a-pm&quot;&gt;Being a PM&lt;/h2&gt;

&lt;p&gt;I started as a PM on the team that I had interned with (Cluster Management), continuing my
summer project on resource allocation and resource efficiency. The summer work had involved
implementing a proof-of-concept and showing that it would have the desired impact from a
theoretical perspective. Now, six months later, the task was to actually implement this
new resource allocation framework and roll it out across the company.&lt;/p&gt;

&lt;p&gt;The implementation phase, as it turned out, was really, really hard. Changing how resources were
allocated involved modifying dozens of different systems across the stack and working with
stakeholders who ranged from being skeptical about the project in the best case, to outright hostile
in the worst. After a little over a year, the project team got reorganized, and I decided that
the writing was on the wall and that it was time to move on.&lt;/p&gt;

&lt;p&gt;I had been doing some part-time PM work on the
&lt;a href=&quot;https://www.google.com/publicdata/directory&quot;&gt;Google Public Data&lt;/a&gt; project, and liked the team a
lot, so I managed to transition this into a full-time role.&lt;/p&gt;

&lt;p&gt;When I started on the Public Data Team, I focused on typical PM work like writing requirements
docs and talking to customers. The team was pretty small, though, so product specs
could be generated a lot faster than the described product features could be implemented; to fill
up the extra time, I decided to take up small, engineering-related side projects that would be
useful to the team and our customers.&lt;/p&gt;

&lt;p&gt;Our data providers, for instance, were having trouble getting their data into the XML-based format
that we required. So, I wrote some command-line tools in Python to help with the conversion process,
got this code reviewed by engineers on the team, and made it available to our users. Other projects
included prototyping a web-based dataset editor and writing Chrome extensions to speed up our
release QA process.&lt;/p&gt;

&lt;p&gt;After a while, I realized that I liked working on these kinds of projects a lot more than my
regular product work. Although I was doing an acceptable job as a PM, I started dreading the endless
meetings and the hours spent working on product specs that had little chance of ever being
implemented. The highlight of each day was the hour or so when I could put my headphones in
and write code.&lt;/p&gt;

&lt;p&gt;About a year into my stint on the Public Data Team, the project got merged into another,
larger effort, and the pieces that I had worked on were deemphasized. After three years as a PM, I
decided that it wasn’t the ideal role for me and that now was the time to switch to engineering.&lt;/p&gt;

&lt;h2 id=&quot;switching&quot;&gt;Switching&lt;/h2&gt;

&lt;p&gt;Once I decided to switch, I had two choices- I could either make the transition at Google or
just apply to engineering jobs at other companies. I had been at Google for a while and was
itching to leave and do something new, so I went with the latter.&lt;/p&gt;

&lt;p&gt;I was initially worried about getting interviews, but this turned out to not be a problem at all-
despite having no formal engineering experience on my resume, most companies I applied to were willing
to give me a chance because I was coming from a well-known place and had a bachelor’s degree in a
relevant field. The interviews were tough, but I managed to get some solid offers and ultimately
decided to sign on as a SWE at &lt;a href=&quot;https://mopub.com&quot;&gt;MoPub&lt;/a&gt;. I left Google, took a two week vacation,
started the new job, and have been an engineer ever since.&lt;/p&gt;

&lt;h2 id=&quot;looking-back&quot;&gt;Looking back&lt;/h2&gt;

&lt;p&gt;Switching to engineering was a great decision for me, and one that I’ve had zero regrets about.
I’m much, much happier as an engineer, and I think my career has turned out better because
of it. Although I spent a few years in a less-than-ideal role, I learned a lot from that experience,
and I think it’s made me a better engineer because I’m able to incorporate product-related
thinking into my day-to-day work.&lt;/p&gt;

&lt;h2 id=&quot;how-to-decide&quot;&gt;How to decide?&lt;/h2&gt;

&lt;p&gt;Ultimately, which path to take really depends on what makes you happiest. I’m very introverted
and love sitting in front of my computer all day with my headphones in, so SWE is the best fit for
me. If you’re more extroverted and would prefer to spend your time in meetings talking about
product features with engineers and other stakeholders, then PM might be a better path.&lt;/p&gt;

&lt;p&gt;If you’re thinking of switching between product and engineering, the lowest-risk approach is to try
out the other role for a few months at your current company. Large companies like Google
usually have formal rotation programs for doing this; even at companies without these kinds of
programs, it’s often possible to negotiate a one-off rotation. If you’re not able to do this,
you can at least try out some tasks on your team that are typically done by the “other” side-
as a PM, for instance, spend a few days fixing bugs in your team’s code, or, as an engineer, talk to
some of your customers and write a requirements doc for a new product feature.&lt;/p&gt;</content><author><name></name></author><summary type="html">I began my career as a product manager (PM) but then switched tracks and became a software engineer (SWE) three and a half years later. In this post, I want to describe how I started as a PM, why I made the decision to switch, and how it worked out.</summary></entry><entry><title type="html">Interviewing with Triplebyte</title><link href="https://yolken.net/blog/triplebyte-review" rel="alternate" type="text/html" title="Interviewing with Triplebyte" /><published>2019-08-31T16:23:00-07:00</published><updated>2019-08-31T16:23:00-07:00</updated><id>https://yolken.net/blog/triplebyte-review</id><content type="html" xml:base="https://yolken.net/blog/triplebyte-review">&lt;p&gt;In my most recent job search, I used a service called
&lt;a href=&quot;https://triplebyte.com/&quot;&gt;Triplebyte&lt;/a&gt; to connect with potential employers.
Triplebyte basically plays the role of a third-party recruiter- it signs
solicitation agreements with clients (i.e., companies) and then matches
candidates with open jobs at these companies. If a candidate brought in by the
recruiter ends up signing an offer with a client, the client pays a certain
percentage of the the candidate’s first year salary as a fee.&lt;/p&gt;

&lt;p&gt;Unlike traditional third-party recruiters, who usually just pass you off
to their clients’ own recruiters, Triplebyte actually does some of the
technical screening itself. It also uses technology (i.e., a slick web site)
to handle the logistics around sending messages back and forth,
scheduling calls, collecting feedback, etc.&lt;/p&gt;

&lt;p&gt;In the end, I decided to accept a job that I found through a non-Triplebyte
source. However, I had an interesting experience with Triplebyte, and
I wanted to share my thoughts in case others are considering using their
services.&lt;/p&gt;

&lt;h2 id=&quot;how-triplebyte-works&quot;&gt;How Triplebyte works&lt;/h2&gt;

&lt;p&gt;First, you do a short, online, multiple-choice test that covers coding, SQL,
computer hardware, and a few other, related topics.&lt;/p&gt;

&lt;p&gt;If you pass the online test, then you can schedule a two hour video chat with a
Triplebyte interviewer. This chat is like a traditional, technical phone screen,
except longer- it covers writing code, debugging an existing codebase, systems
design, and basic technical knowledge (e.g., how HTTP works).&lt;/p&gt;

&lt;p&gt;If you pass the video interview, then you move to the matching phase. The
Triplebyte site shows you a list of companies matching your criteria; you can
select which you’re particularly interested in and (optionally) write them
messages explaining why. You also fill out a calendar to specify when you’re
available for “pitch” calls.&lt;/p&gt;

&lt;p&gt;After a few days, your profile goes “live” allowing companies to see it. If
you’ve already expressed interest in a company, and they’re also interested
in you, they’re allowed to put a call in your calendar without asking. If they’re
interested in you but you didn’t explicitly express interest in them, they can
still write you a message asking for a chance to chat; if you accept,
then they’re also allowed to put time in your calendar.&lt;/p&gt;

&lt;p&gt;You then do a 30-45 minute call with each company that you’ve matched with.
These calls are mostly for the companies to sell themselves to you. They can
also ask you questions about your background and interests, although, per
Triplebyte policy, they’re not allowed to ask any technical questions at this
stage.&lt;/p&gt;

&lt;p&gt;After each call, both you and the company indicate whether you want to move
forward. If there’s still a match, you work with the company to schedule
an on-site, and from this point forward you follow the standard, non-Triplebyte
process.&lt;/p&gt;

&lt;p&gt;In the end, if you accept an offer from one of the companies you matched
with, the company pays Triplebyte according to their agreement. Triplebyte
doesn’t disclose its fees publicly, but third-party recruiters typically
charge at least 25% of the candidate’s first year salary.&lt;/p&gt;

&lt;h2 id=&quot;the-stats&quot;&gt;The stats&lt;/h2&gt;

&lt;p&gt;After making it through the multiple-choice screen and video interview, I was shown
around 50 companies that met my criteria (in San Francisco, 100+ employees).
Around 20 expressed interest in me, and I did pitch calls with 8 of them. 7 of
these invited me on-site, I did 2 on-sites, and, in the end, I got 2 offers.&lt;/p&gt;

&lt;h2 id=&quot;the-good&quot;&gt;The good&lt;/h2&gt;

&lt;h4 id=&quot;saving-time&quot;&gt;Saving time&lt;/h4&gt;

&lt;p&gt;The marketing pitch for Triplebyte is that they save candidates time, and, at least
in my personal case, I found this to be true. It took a few hours for me
to set up my profile and do the initial screens, but it saved me much more
than that because I didn’t have to do recruiter and technical screens for
each of the companies I matched with.&lt;/p&gt;

&lt;p&gt;In addition to taking a lot of time, these per-company screens can be a pain to
schedule and usually can only be done during business hours. Triplebyte’s interview,
on the other hand, is scheduled by picking a slot from a list of options
on their site. Because many of their interviewers are remote and/or working part-time,
they have slots available almost 24/7. I did my interview 9:00-11:00PM on a Friday night
with a nice Polish guy, for whom it was Saturday morning.&lt;/p&gt;

&lt;p&gt;You still have to do “pitch” calls before going on-site, but I found these
pretty easy to fit into my schedule because they’re short and don’t have the usual
requirements of a technical interview (computer, quiet room, good Internet, etc.).&lt;/p&gt;

&lt;h4 id=&quot;detailed-feedback&quot;&gt;Detailed feedback&lt;/h4&gt;

&lt;p&gt;Triplebyte provided very detailed feedback for the two hour video
interview that they did with me. I didn’t learn too much from it that
I didn’t already know, but I can imagine that this feedback would be helpful
for people who haven’t had a lot of recent interview experience.&lt;/p&gt;

&lt;h4 id=&quot;low-pressure&quot;&gt;Low pressure&lt;/h4&gt;

&lt;p&gt;I’ve worked with several third-party recruiters in past job searches. They can be
extremely aggressive and needy, some to the point of wanting to chat every day
until I’ve finally signed an offer. I’m an introvert, and, moreover, when I’m
looking for a job I’m usually busier than usual, so I find this kind of
attention pretty annoying.&lt;/p&gt;

&lt;p&gt;Triplebyte’s staff, on the other hand, were super laid back. I spoke to my “talent
manager” (i.e., recruiter) once on the phone and then maybe twice over
email over the following weeks. Aside from a few automated emails asking for
feedback, I didn’t feel that any of their communication was superfluous.&lt;/p&gt;

&lt;h2 id=&quot;the-bad&quot;&gt;The bad&lt;/h2&gt;

&lt;h4 id=&quot;limited-matches&quot;&gt;Limited matches&lt;/h4&gt;

&lt;p&gt;The 5 or so client companies that I was most interested in chose not to match
with me. This was their right, of course, but it was a little frustrating, and
it’s an aspect of the process that Triplebyte’s marketing glosses over.&lt;/p&gt;

&lt;p&gt;In the end, I matched with some interesting companies lower down on my list, so I
still felt that Triplebyte was worth it. However, I’ve heard anecdotally that some
candidates have trouble matching with any companies that they’re even remotely
interested in; this may be more likely if your profile is a little riskier for
potential employers, i.e. you’re not already local or you don’t have well-known companies
on your resume.&lt;/p&gt;

&lt;h4 id=&quot;trivia-questions-in-interviews&quot;&gt;Trivia questions in interviews&lt;/h4&gt;

&lt;p&gt;The video interview was a little less practical than I ideally would have liked;
a decent chunk of it consisted of what I would consider “trivia” questions
(see &lt;a href=&quot;/blog/rules-for-better-interviews&quot;&gt;this previous post&lt;/a&gt; for my thoughts on these
types of questions). In Triplebyte’s defense, though, I would imagine that many
of their clients also ask these types of questions, so they need to include them
in their assessment.&lt;/p&gt;

&lt;h4 id=&quot;rushed-process&quot;&gt;Rushed process&lt;/h4&gt;

&lt;p&gt;Triplebyte’s process is designed to be fast; your profile is only “live” for a week,
and, because you skip the technical screens, you have to make a decision about whether
to go on-site quickly and with less information than you’d typically have at this stage in the
process. This is great for people who have lots of free time (e.g., because they’re not currently
working) and want to do lots of on-sites, but for people like me who are already working
and want to be more deliberate, it can make it hard to know whether a role is a good match.&lt;/p&gt;

&lt;p&gt;One thing I did with one of the companies I matched with but was feeling on-the-fence about was to
arrange an office visit and casual lunch with the hiring manager after the pitch call. This helped
me to decide that the role wasn’t the best fit, which saved both me and the company a lot of time.
It would be nice if Triplebyte facilitated these kind of pre-on-site, casual meetings for
local candidates who can’t spend two weeks doing on-sites.&lt;/p&gt;

&lt;h2 id=&quot;the-verdict&quot;&gt;The verdict&lt;/h2&gt;

&lt;p&gt;Overall, I would recommend Triplebyte to people seeking software engineering jobs
in the Bay Area. It doesn’t require a huge amount of time and effort, and the downsides
are pretty limited; even if you don’t pass their process, you’ll get some practice (with detailed
feedback), and you can still apply to their client companies directly.&lt;/p&gt;</content><author><name></name></author><summary type="html">In my most recent job search, I used a service called Triplebyte to connect with potential employers. I wanted to share my thoughts in case others are considering using their services to find a job.</summary></entry><entry><title type="html">The rules for better coding interviews</title><link href="https://yolken.net/blog/rules-for-better-interviews" rel="alternate" type="text/html" title="The rules for better coding interviews" /><published>2019-06-09T16:49:00-07:00</published><updated>2019-06-09T16:49:00-07:00</updated><id>https://yolken.net/blog/rules-for-better-interviews</id><content type="html" xml:base="https://yolken.net/blog/rules-for-better-interviews">&lt;p&gt;In a &lt;a href=&quot;/blog/master-coding-interviews&quot;&gt;previous post&lt;/a&gt;, I discussed preparing for coding
interviews as a candidate. In this post, I want to flip to the other side of the table
and talk about conducting better interviews from the interviewer perspective.&lt;/p&gt;

&lt;h2 id=&quot;goals-of-an-interview&quot;&gt;Goals of an interview&lt;/h2&gt;

&lt;p&gt;Before digging into the details, it’s worth reviewing what the purpose of an interview is-
figuring out whether a random person who you probably don’t know much about (i.e., “the candidate”)
is a good match for a specific position at your company (i.e., “the job”).&lt;/p&gt;

&lt;p&gt;The most reliable way to figure out whether the candidate is a match for the job is to
observe them doing the job or, at least, doing activities that are as close as possible to the
work involved in the job. If you were interviewing a chef for a restaurant, you would ask
them to cook a meal for you. Likewise, in the case of a software engineer, your interview should
focus on things that software engineers actually do day-to-day- writing, testing, and running code
on a computer, debugging issues in systems, and explaining technical ideas to colleagues, among
other things.&lt;/p&gt;

&lt;p&gt;Questions that are not directly related to day-to-day work on the job may have some correlation
with eventual job performance, but it’s not going to be as strong. Given the amount of time required
for the interview on both sides as well as the risk of bad hiring decisions, it’s best for all
questions to be as practical and job-relevant as possible.&lt;/p&gt;

&lt;h2 id=&quot;the-rules&quot;&gt;The rules&lt;/h2&gt;

&lt;p&gt;Now that we’ve covered the purpose of interviewing, I’d like to share some “rules” for coding
interviews to ensure that they’re productive and provide good signal.&lt;/p&gt;

&lt;h3 id=&quot;rule-1-coding-problems-should-be-done-on-a-computer-not-a-whiteboard&quot;&gt;Rule 1: Coding problems should be done on a computer, not a whiteboard&lt;/h3&gt;

&lt;p&gt;Writing code on a whiteboard made sense 25 years ago, before laptops were ubiquitous and
when compiling and testing small programs could be painful due to primitive tooling.
Now, there’s really no good reason to do it. Unless you happen to be at a company where software
is written without computers, having a candidate use a computer is much closer to the work in the
actual job and, therefore, is a more accurate way to predict job performance.&lt;/p&gt;

&lt;p&gt;Beyond the high-level, philosophical reasons for doing coding problems on computers, there are
a number of practical benefits for both the candidate and the interviewing company:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Writing code on a computer, ideally their own computer, allows the candidate to use the tooling
  that they feel comfortable with and that makes them productive. Since engineers at most
  companies are allowed to pick their own tooling (within reasonable limits), this better matches
  the conditions of the actual job.&lt;/li&gt;
  &lt;li&gt;On a computer, you can’t hand-wave away parts of your solution (e.g., “suppose we had a helper
  function that implemented a binary search”). The candidate has to either implement it themselves
  or find some existing code or library to use.&lt;/li&gt;
  &lt;li&gt;Coding problems on a computer requires the candidate to write tests and then iteratively
  debug problems that are found. These testing and debugging skills are an important part of
  software engineering work, but they’re much harder to evaluate on a whiteboard.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;rule-2-please-no-algorithm-trivia&quot;&gt;Rule 2: Please, no algorithm trivia&lt;/h3&gt;

&lt;p&gt;Understanding algorithms and data structures is a prerequisite for writing good software. Having
them all committed to memory, however, is not. This is particularly true for the long tail things
that are rarely encountered in day-to-day work. Quizzing a candidate on lexicographic sorting, heap
implementations, or reversing linked lists is usually just a waste of time- if you need to
understand the details of these things on the job, you can just look them up.&lt;/p&gt;

&lt;p&gt;The same goes for trivia about programming language syntax, operating systems, hardware,
or other technical topics. If it’s something that people can either pick up on the job or look up
as needed, you’re not actually measuring something that’s critical for job success; instead,
you’re picking up correlated skills (e.g., studying and memorization) that may not be relevant.&lt;/p&gt;

&lt;h3 id=&quot;rule-3-avoid-one-shot-all-or-nothing-problems&quot;&gt;Rule 3: Avoid one-shot, all or nothing problems&lt;/h3&gt;

&lt;p&gt;Most problems that engineers work on are done in stages. You usually don’t deliver a new system in
a single commit. Instead, you start with the high-level data models and interfaces, sketch out
the key classes, fill in the blanks with basic implementations, then come back and optimize
as needed. At each stage, you get feedback from your peers (or, in some cases, your end users), and
make course corrections as needed before continuing to the next stage.&lt;/p&gt;

&lt;p&gt;Coding problems done in interviews should ideally be structured in a similar way. Instead of
just throwing a problem out and asking the candidate to solve it end-to-end in one burst, it’s
better to divide it into chunks and work through it in stages- first, have the candidate write
a skeleton class, then ask them to add in a method to do X, then a method to do Y that uses X, etc.
Ideally, there should be a long list of these extensions so that even the best candidates never
make it through all of them.&lt;/p&gt;

&lt;p&gt;In addition to being more like real projects, this approach has a number of other,
interview-specific benefits:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Candidates are eased into the problem gradually. If they’re prone to interview anxiety
  (as I often am), this makes them feel more comfortable.&lt;/li&gt;
  &lt;li&gt;Having seen the problem before is less of an advantage. The candidate may be able to get
  an answer to the core parts very quickly, but then you can just ask harder and harder extensions
  which they’re less likely to have prepared solutions for.&lt;/li&gt;
  &lt;li&gt;Performance is less likely to be binary. Even weak candidates should make some progress,
  whereas stronger candidates will get to different parts of the problem depending on their
  skills and background. This allows for more granular feedback than simply “they got the problem
  so they passed” or “they didn’t get it so they failed”.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;other-approaches-to-more-practical-interviews&quot;&gt;Other approaches to more practical interviews&lt;/h2&gt;

&lt;p&gt;Over the course of my career, I’ve seen companies take other approaches to make their
interviews better match real work. These are less common and a bit more controversial than
the rules above, so I’m putting them in their own section.&lt;/p&gt;

&lt;h3 id=&quot;mini-projects&quot;&gt;Mini-projects&lt;/h3&gt;

&lt;p&gt;Instead of asking a bunch of smaller, 45-60 minute technical questions, some companies have their
candidates do a single “mini-project”. The work is either done at home, before the interview,
or for a couple of hours on site. Ideally, the candidate doesn’t just submit their code but also
gets a chance to present their work and discuss why they took the approaches that they did with
their interviewers.&lt;/p&gt;

&lt;p&gt;I think these projects can be a good way to make interviews more realistic and give candidates
a chance to show off their skills. On the other hand, when the project is done at home (as is
usually the case), there’s pressure to spend a lot of time on it, way more than the suggested
amount, to make a good impression. This can be unfair for candidates who have full-time jobs
and/or significant personal obligations outside of work.&lt;/p&gt;

&lt;h3 id=&quot;pairing&quot;&gt;Pairing&lt;/h3&gt;

&lt;p&gt;The idea here is to have the candidate pair with a member of the team instead of solving interview
problems by themselves. The pair can work together on either made-up interview questions or,
in some cases, actual project work for the company. Ideally, the company has hardware set up
that’s designed for pairing, i.e. two monitors, mice, and keyboards connected to a single computer.&lt;/p&gt;

&lt;p&gt;The advantages over standard, non-paired interviews are that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The interview better tests collaboration, a big part of practical software work, by forcing the
  candidate to work directly with someone else.&lt;/li&gt;
  &lt;li&gt;The interviewer can step in and help the candidate make progress when they get stuck.&lt;/li&gt;
  &lt;li&gt;If the pairing is on actual project work, the interview can be a more realistic test of how
  well the candidate will perform on the job.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I think there are good intentions here. In practice, though, there are a number of issues I’ve
seen with pairing interviews that make me have mixed feeling about them:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If the company provides its own hardware, then the candidate might be forced to use a setup
  that’s not ideal for them.&lt;/li&gt;
  &lt;li&gt;Often, there really isn’t much pairing going on- the interviewer just watches the candidate solve
  the question like in a normal, non-paired interview.&lt;/li&gt;
  &lt;li&gt;If the pairing is on actual project work, then the candidate is basically being forced to do
  unpaid work. Aside from the potential legal issues involved here, this can feel
  exploitative.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;concluding-thoughts&quot;&gt;Concluding thoughts&lt;/h2&gt;

&lt;p&gt;Interviews should measure how well candidates do on realistic problems under job-like constraints.
Despite the common sense behind this, I still see companies routinely asking abstract, one-shot,
whiteboard coding questions. Just don’t do this- it’s not the way to hire the best people.&lt;/p&gt;</content><author><name></name></author><summary type="html">In a previous post, I discussed preparing for coding interviews as a candidate. In this post, I want to flip to the other side of the table and talk about conducting better interviews from the interviewer perspective.</summary></entry><entry><title type="html">Using Leetcode to master coding interviews</title><link href="https://yolken.net/blog/master-coding-interviews" rel="alternate" type="text/html" title="Using Leetcode to master coding interviews" /><published>2019-05-27T14:38:04-07:00</published><updated>2019-05-27T14:38:04-07:00</updated><id>https://yolken.net/blog/master-coding-interviews</id><content type="html" xml:base="https://yolken.net/blog/master-coding-interviews">&lt;p&gt;&lt;img src=&quot;/assets/leetcode.png&quot; alt=&quot;Leetcode image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Having switched jobs &lt;a href=&quot;https://www.linkedin.com/in/yolken/&quot;&gt;a few times&lt;/a&gt; over the last few years,
I’ve done a &lt;em&gt;a lot&lt;/em&gt; of software engineering interviews. In my most recent job search, for instance,
I did around eight phone screens followed by six on-sites.&lt;/p&gt;

&lt;p&gt;The most stressful part of any interview for me, and for many others as well,
is the “technical coding” questions that inevitably get asked; most companies require you to solve
at least one during a phone screen, and then another two to four once you get onsite.&lt;/p&gt;

&lt;p&gt;Over the last few job searches, I’ve developed a strategy that has significantly improved my
performance on these questions, to the point that I’m now rarely phased by them. In this post, I’d
like to share what I’ve learned.&lt;/p&gt;

&lt;h2 id=&quot;practice-practice-practice&quot;&gt;Practice, practice, practice&lt;/h2&gt;

&lt;p&gt;The key to doing an excellent job in a coding-oriented software interview is very simple- you
&lt;em&gt;really, really&lt;/em&gt; need to practice beforehand. The interesting thing about practice is that it’s
more effective, more necessary, and more profitable than one would intuitively think.&lt;/p&gt;

&lt;h3 id=&quot;why-its-more-effective-than-you-think&quot;&gt;Why it’s more effective than you think&lt;/h3&gt;

&lt;p&gt;Software is such a broad field and there are so many technologies and applications that could come
up in an interview! Sure, practice can help, but how can it really make that much of a difference?&lt;/p&gt;

&lt;p&gt;The reality, however, is that only a small subset of these are appropriate for an interview. In
particular, companies generally restrict their questions to those that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Can be explained in under 5 minutes&lt;/li&gt;
  &lt;li&gt;Can be solved by a good candidate, starting from scratch, in under 30 minutes&lt;/li&gt;
  &lt;li&gt;Don’t require specialized, domain-specific knowledge
  (e.g., networking, databases, cryptography, graphical user interfaces, etc.)&lt;/li&gt;
  &lt;li&gt;Don’t require external data, documentation, hardware, or software libraries / code&lt;/li&gt;
  &lt;li&gt;Touch on intro-undergraduate-level algorithms and data structures including
  sorting, searching, dynamic programming, lists, hashmaps, etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These restrictions significantly reduce the pool of possible questions. Even if you
get a question that isn’t exactly like one you covered in your practice, chances are that it
has some similarities to one you have seen, and you can use those to your advantage.&lt;/p&gt;

&lt;h3 id=&quot;why-its-more-necessary-than-you-think&quot;&gt;Why it’s more necessary than you think&lt;/h3&gt;

&lt;p&gt;Another misconception is that if you’re already doing a lot of hands-on software development
as part of your day-to-day job, this replaces the need for practice. That would make sense
if companies only asked practical questions, but the reality is that most don’t. In fact,
the vast, vast majority of questions I’ve gotten over the years have little direct overlap with the
work I’ve done in the past or, most likely, the work that I would do if hired by the interviewer’s
company.&lt;/p&gt;

&lt;p&gt;The reason for this gets back to the criteria listed above; day-to-day projects rarely,
if ever, satisfy all of these. Most questions are completely synthetic and, thus, you need practice
beyond your day-to-day work to really get a handle on them.&lt;/p&gt;

&lt;h3 id=&quot;why-its-more-profitable-than-you-think&quot;&gt;Why it’s more profitable than you think&lt;/h3&gt;

&lt;p&gt;What many people don’t realize is that interview performance isn’t just a binary, “hire or no hire”
checkpoint on the way to a job offer. At many companies, even if you meet the hiring bar,
your performance is used as an input in setting your starting level and compensation. Doing an
excellent job on your coding interviews, as opposed to just a good one, may lead to a stronger
initial offer and give you more negotiating leverage as you move through your job search.&lt;/p&gt;

&lt;h2 id=&quot;enter-leetcode&quot;&gt;Enter Leetcode&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt; is a site designed for practicing interview-style coding
questions. It has a large pool of questions and an online code editor that allows you to write up
and submit solutions to them.&lt;/p&gt;

&lt;p&gt;Each submission is run against a set of question-specific test cases that verify both the
correctness and efficiency of the solution. If you get stuck, you can get help by looking through
official solution write-ups (available for the most popular questions) or reading the messages on
each question’s discussion board.&lt;/p&gt;

&lt;p&gt;There are a bunch of other sites in the general, “code interview prep” space. I’ve been
less satisfied with the ones that I’ve looked at, however, because their questions feel less
realistic to me; they’re often not at the right level of difficulty, or they’re simply too long to
do in a 45 minute interview. These questions may be fun to work through, but if your goal is to prep
for interviews, solving them may not be the most efficient use of time.&lt;/p&gt;

&lt;p&gt;Note that I have no official relationship with Leetcode. I just like the site and want to tell
others about it. :-)&lt;/p&gt;

&lt;h3 id=&quot;leetcode-question-difficulty&quot;&gt;Leetcode question difficulty&lt;/h3&gt;

&lt;p&gt;Leetcode classifies questions as either “easy”, “medium”, or “hard”. I’ve found that
the sweet spot for actual interviews typically begins at the middle of the “medium” tier and runs
into the bottom (i.e., easier) chunk of “hard”. “Easy” questions are fine to do as stepping stones
to the “medium” tier, but you’re less likely to see these types of questions in an actual interview.&lt;/p&gt;

&lt;p&gt;The hardest “hard” questions in Leetcode are annoying because they often require obscure
algorithmic tricks to solve efficiently. I don’t worry about these questions too much because,
in the unlikely event that I were to get a question in this tier, the interviewer would (hopefully)
provide hints. They also don’t generalize as well as the easier questions, so studying them is not
the most effective use of time.&lt;/p&gt;

&lt;h2 id=&quot;prep-strategy&quot;&gt;Prep strategy&lt;/h2&gt;

&lt;p&gt;Once you’ve gotten your Leetcode account set up, it’s time to actually start preparing.&lt;/p&gt;

&lt;h3 id=&quot;language-choice&quot;&gt;Language choice&lt;/h3&gt;

&lt;p&gt;Leetcode supports the languages that are most commonly used for interviews including C++, Java,
Javascript, Python, and Ruby. You should obviously practice in the one(s) that you intend to use.&lt;/p&gt;

&lt;p&gt;I would highly recommend choosing a single, high-level language for all of your interviews. I
personally always use Python; Ruby is also a reasonable choice. C++, on the other hand, is probably
not a great choice unless you happen to be a virtuoso in the language.&lt;/p&gt;

&lt;p&gt;There are numerous advantages to choosing a high-level language like Python:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Compact, less verbose code:&lt;/strong&gt; Assuming a fixed typing or white boarding speed, this means that
  you can construct solutions faster.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No IDE required:&lt;/strong&gt; Many interviews are still done on whiteboards or in bare-bones
  text editors, so you can’t always depend on having an IDE to help out.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rich standard libraries:&lt;/strong&gt; Python, for instance, provides binary search (in &lt;code class=&quot;highlighter-rouge&quot;&gt;bisect&lt;/code&gt;),
  permutations (in &lt;code class=&quot;highlighter-rouge&quot;&gt;itertools&lt;/code&gt;), heaps (in &lt;code class=&quot;highlighter-rouge&quot;&gt;heapq&lt;/code&gt;), and many other things that are helpful for
  solving interview questions.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Of course, the company you’re interviewing at might use something else, like Java or C++. But,
that’s generally ok. In fact, in my many years of interviewing I’ve &lt;em&gt;never&lt;/em&gt; had an interviewer
complain about my use of Python or felt that it ever counted against me. The most important
thing is to deliver clean, correct code; provided you do this, the language you choose isn’t really
an issue.&lt;/p&gt;

&lt;h3 id=&quot;working-through-the-questions&quot;&gt;Working through the questions&lt;/h3&gt;

&lt;p&gt;When I’m ready to start, I pay for a premium Leetcode subscription. It’s a bit pricey (about $35 /
month as of early 2019), but I find it worth the money because it removes restrictions
in the free product including access to locked questions and the ability to sort questions by
frequency. You can still use Leetcode if you don’t pay, but you’ll have to do some offline
research to figure out which questions are the most important ones to focus on.&lt;/p&gt;

&lt;p&gt;I then sort the questions in decreasing order of frequency (only available after paying for premium)
and go through them roughly in order. I say “roughly” because I like to initially focus on the
easier questions, and then, as I get more confidence, shift to the ones in the medium-to-hard range
which, as discussed above, are more typical in actual interviews. Also, some questions are just
slight variations of ones above them in the list, so I’ll skip over these if I already feel
comfortable with them.&lt;/p&gt;

&lt;p&gt;Once I’ve decided to do a question, I’ll work on it independently for about 20 minutes. If I can’t
get a reasonable solution within this time, I’ll peek at the official solution for a few hints and
then get back to work; this is similar to how it would work in an actual interview, with the
difference being that in the real thing a person (i.e., your interviewer) would be offering
these hints.&lt;/p&gt;

&lt;p&gt;I stop working on the question when either I get all the test cases to pass or I hit the 45 minute
mark. Whether I’ve gotten a working answer or not, I read through the solution to make sure
that I have a correct understanding of the problem and the possible approaches to it. If I didn’t
get a fully working solution within 45 minutes, I’ll go back and implement one of the
approaches in the solution write-up, making sure that I fully understand what I’m writing down.&lt;/p&gt;

&lt;h3 id=&quot;solution-efficiency&quot;&gt;Solution efficiency&lt;/h3&gt;

&lt;p&gt;Many Leetcode questions can be solved in more than one way. Given a choice, I generally start with
the simplest approach. Then, if this isn’t good enough, I’ll optimize.&lt;/p&gt;

&lt;p&gt;In a real interview, this push to optimize would be done by the interviewer. In the Leetcode
case, you’ll usually know you need to optimize because a test case will time out. In the rare
event that a wildly suboptimal, naive solution passes all the test cases, you’ll notice this by
seeing that your solution is in the far right tail of the execution time histogram that Leetcode
shows at the end.&lt;/p&gt;

&lt;h3 id=&quot;consulting-external-sources&quot;&gt;Consulting external sources&lt;/h3&gt;

&lt;p&gt;Most interviewers will allow you to look up general API docs or code snippets online if you ask.
However, doing this can waste a lot of time and thus should be used sparingly in real interviews.
It’s fine to do lots of lookups early in your preparation, but by the end all of the basic tasks
in your language of choice (e.g., iterating over a hash map, reading a file, etc.) should be
committed to memory.&lt;/p&gt;

&lt;h3 id=&quot;how-much-studying-is-enough&quot;&gt;How much studying is enough?&lt;/h3&gt;

&lt;p&gt;I usually feel ready to do real interviews after I’ve solved around 100 questions. Doing more
than this has diminishing returns for me because the questions begin to look alike and my
performance doesn’t significantly improve. It takes me at least 3 weeks to get through this many
questions, assuming that I’m spending most of my weekends studying.&lt;/p&gt;

&lt;p&gt;Ultimately, the goal isn’t to hit a specific number but rather to feel comfortable with arbitrary
questions in the interview difficulty range (mid-medium to low-hard, as discussed above). You may
get to this point after only a few dozen questions or, if you’re particularly rusty, it may take
many more than 100. Likewise, the time required will also vary, from just a week or two to
6 months or more.&lt;/p&gt;

&lt;h2 id=&quot;leetcode-gaps&quot;&gt;Leetcode gaps&lt;/h2&gt;

&lt;p&gt;Leetcode has good coverage for most types of coding questions, but I have noticed some
gaps over the course of my recent job hunts. In particular, you may want to do some non-Leetcode
preparation for the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Interface design:&lt;/strong&gt; Leetcode has to provide an interface so that it can run test
  cases against your solution. In a real interview, the interface might not be provided and,
  moreover, designing it might be a big part of the question.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Writing tests:&lt;/strong&gt; Leetcode provides its own test cases, so you don’t have to write any. In
  a real interview, you may be expected to test your solution, so you should feel comfortable
  doing this in your language of choice. Using something simple like &lt;code class=&quot;highlighter-rouge&quot;&gt;assert&lt;/code&gt;
  statements is fine; there’s usually no need for complicated unit testing frameworks.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Big-O analysis:&lt;/strong&gt; Some interviewers like asking about time and space efficiency after you
  write up a solution; Leetcode doesn’t explicitly test this, although the official solutions
  write-ups usually include some efficiency analysis.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Concurrency:&lt;/strong&gt; Leetcode doesn’t provide much coverage for concurrency-related problems. You may
  want to brush up on concurrency primitives in your interview language, particularly if you don’t
  use these as part of your day-to-day work.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Network and file system operations:&lt;/strong&gt; Leetcode solutions run in a sandbox, and thus aren’t
  going to be making HTTP requests or reading files from the file system. These types of questions
  aren’t super common, but some companies do like them so you may want to brush up on how to do
  them in your chosen interview language.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;popular-question-types&quot;&gt;Popular question types&lt;/h2&gt;

&lt;p&gt;During my most recent rounds of interviewing, there were some types of questions that came up
again and again. If you’re on the market, you may want to spend some time making sure you’re
extra comfortable with questions of these types.&lt;/p&gt;

&lt;h4 id=&quot;searching-andor-exploring-in-a-2d-grid&quot;&gt;Searching and/or exploring in a 2D grid&lt;/h4&gt;

&lt;p&gt;Interviewers love these questions because they hit on multiple topics at once: recursion,
dynamic programming, 2D arrays/lists, spatial reasoning, etc. They also lend themselves nicely
to follow-up challenges if you finish the question quickly and the interviewer wants to give you
more.&lt;/p&gt;

&lt;p&gt;See Leetcode &lt;a href=&quot;https://leetcode.com/problems/unique-paths/&quot;&gt;62&lt;/a&gt; and
&lt;a href=&quot;https://leetcode.com/problems/number-of-islands/&quot;&gt;200&lt;/a&gt; and for examples.&lt;/p&gt;

&lt;h4 id=&quot;evaluating-arithmetic-expressions&quot;&gt;Evaluating arithmetic expressions&lt;/h4&gt;

&lt;p&gt;These questions are popular because they’re easy to explain and test, but can be challenging to
implement. See Leetcode &lt;a href=&quot;https://leetcode.com/problems/basic-calculator-ii/&quot;&gt;227&lt;/a&gt; for an example.&lt;/p&gt;

&lt;h4 id=&quot;designing-and-implementing-keyvalue-stores-or-caches&quot;&gt;Designing and implementing key/value stores or caches&lt;/h4&gt;

&lt;p&gt;Caches are practical and easy to explain, but, depending on the desired performance tradeoffs,
require a good understanding of certain data structures and algorithms. Leetcode
&lt;a href=&quot;https://leetcode.com/problems/lru-cache/&quot;&gt;146&lt;/a&gt; is a classic of this type.&lt;/p&gt;

&lt;h2 id=&quot;concluding-thoughts&quot;&gt;Concluding thoughts&lt;/h2&gt;

&lt;p&gt;Preparing for coding questions makes these questions easier to solve and significantly
increases your chances of doing well in job interviews. However, no strategy is perfect, and
ultimately, no matter how smart or well-prepared you are, tech interviewing can still be a bit
of a crapshoot. If you get rejected, use the experience to better understand your weak spots
and further refine your preparation strategy.&lt;/p&gt;

&lt;p&gt;Good luck!!&lt;/p&gt;

&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;

&lt;p&gt;I’d like to thank &lt;a href=&quot;https://www.linkedin.com/in/johnmishanski/&quot;&gt;John Mishanski&lt;/a&gt; for providing
feedback on early drafts of this post.&lt;/p&gt;</content><author><name></name></author><summary type="html">Having switched jobs a few times over the last few years, I've done a a lot of software engineering interviews. In my most recent job search, for instance, I did around eight phone screens followed by six on-sites.</summary></entry></feed>